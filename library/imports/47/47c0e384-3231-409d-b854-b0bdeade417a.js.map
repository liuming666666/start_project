{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","start","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","onLoad","jumpAction","node","runAction","accLeft","accRight","xSpeed","setInputControl","audioEngine","playEffect","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","left","d","right","onKeyReleased","update","dt","Math","abs","x","parent","width"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        jumpAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n         // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        this.setInputControl();\r\n    },\r\n    playJumpSound:function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n            onKeyPressed: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.left:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                    case cc.KEY.right:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            // 松开按键时，停止向该方向的加速\r\n            onKeyReleased: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.left:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.right:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        }, self.node);\r\n    },\r\n\r\n     update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n\r\n         if ( this.node.x > this.node.parent.width/2) {\r\n             this.node.x = this.node.parent.width/2;\r\n             this.xSpeed = 0;\r\n         } else if (this.node.x < -this.node.parent.width/2) {\r\n             this.node.x = -this.node.parent.width/2;\r\n             this.xSpeed = 0;\r\n         }\r\n    },\r\n});\r\n"]}